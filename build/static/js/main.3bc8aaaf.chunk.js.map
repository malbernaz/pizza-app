{"version":3,"sources":["lib/graphql.js","lib/store.js","global-styles.js","constants.js","ui-kit.js","util.js","routes/Cart.js","routes/ChooseSize.js","routes/ChooseToppings.js","Root.js","bootstrap.js","index.js","create-store.js"],"names":["graphql","query","arguments","length","Error","string","String","raw","request","_request","Object","asyncToGenerator","regenerator_default","a","mark","_callee","variables","init","res","wrap","_context","prev","next","method","body","JSON","stringify","headers","content-type","fetch","sent","abrupt","json","stop","this","_x","apply","ctx","createContext","GraphqlProvider","_ref","children","_useState","useState","_useState2","slicedToArray","state","setState","react_default","createElement","Provider","value","useQuery","undefined","_useContext","useContext","key","concat","cachedQuery","loading","loaded","useEffect","objectSpread","defineProperty","then","result","React","StoreProvider","initialState","reducer","_React$useReducer","useReducer","_React$useReducer2","dispatch","store_ctx","useStore","mapState","mapDispatch","_React$useContext","global_styles","name","styles","ADD_PIZZA","UPDATE_PIZZA","REMOVE_PIZZA","SET_CURRENT_SIZE","Button","styled_base_browser_esm","target","Center","VerticalCenter","Wrapper","currencyFmt","Intl","NumberFormat","style","currency","cart","removePizza","pizza","type","t","Cart","_useStore","Table","className","map","item","id","toppings","join","format","totalPrice","role","tabIndex","onClick","EmptyCart","Total","reduce","total","AddBtn","to","Link","_templateObject","chooseSize","size","Math","random","toString","substr","currentSize","navigate","ChooseSize","_useQuery","data","setSize","as","onSubmit","e","preventDefault","pizzaSizes","Size","checked","onChange","toUpperCase","basePrice","disabled","ChooseToppings_templateObject","addPizza","ChooseToppings","normalizeToppings","setToppings","toppingsQnt","filter","toppingsPrice","topping","price","toppingsLimitReached","maxToppings","Form","Topping","toppingName","Summary","color","defaultSelected","Root","Fragment","core_browser_esm","globalStyles","es","path","mnt","document","querySelector","store","action","toConsumableArray","createStore","ReactDom","render","store_StoreProvider","graphql_GraphqlProvider","src_Root"],"mappings":"uNAEO,SAASA,EAAQC,GACtB,KAAAC,UAAAC,QAAA,IAAAD,UAAAC,OAAA,EACE,MAAM,IAAIC,MAAM,iEAGlB,IAAIC,EAASC,OAAOC,IAAIN,GAExB,MAAO,CACLI,SACMG,QAFD,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,EAESC,GAFT,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGCL,EAAO,CACTM,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEzB,MAAOI,EAAQW,cACtCW,QAAS,CACPC,eAAgB,qBAPjBR,EAAAE,KAAA,EAWaO,MAAM,8CAA+CZ,GAXlE,cAWCC,EAXDE,EAAAU,KAAAV,EAAAW,OAAA,SAaIb,EAAIc,QAbR,wBAAAZ,EAAAa,SAAAlB,EAAAmB,SAAA,gBAAAC,GAAA,OAAA1B,EAAA2B,MAAAF,KAAAhC,YAAA,IAkBF,IAAImC,EAAMC,wBAAc,IAEpBC,EAAkB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACrBC,mBAAS,IADYC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAgC,EAAA,GACxCI,EADwCF,EAAA,GACjCG,EADiCH,EAAA,GAG7C,OAAOI,EAAAnC,EAAAoC,cAACZ,EAAIa,SAAL,CAAcC,MAAO,CAAEL,QAAOC,aAAaN,IAG7C,SAASW,EAASnD,GAAuB,IAAhBe,EAAgBd,UAAAC,OAAA,QAAAkD,IAAAnD,UAAA,GAAAA,UAAA,GAAJ,GACpCG,EAAoBJ,EAApBI,OAAQG,EAAYP,EAAZO,QADgC8C,EAEpBC,qBAAWlB,GAA/BS,EAFwCQ,EAExCR,MAAOC,EAFiCO,EAEjCP,SACTS,EAAG,GAAAC,OAAMpD,EAAN,KAAAoD,OAAgBhC,KAAKC,UAAUV,IAClC0C,EAAcZ,EAAMU,IAAQ,CAAEG,SAAS,EAAOC,QAAQ,GAyB1D,OAvBAC,oBAAU,WACHH,EAAYE,SACfb,EAASrC,OAAAoD,EAAA,EAAApD,CAAA,GACJoC,EADGpC,OAAAqD,EAAA,EAAArD,CAAA,GAEL8C,EAAM,CACLG,SAAS,EACTC,QAAQ,MAIZpD,EAAQQ,GAAWgD,KAAK,SAAAC,GACtBlB,EAASrC,OAAAoD,EAAA,EAAApD,CAAA,GACJoC,EADGpC,OAAAqD,EAAA,EAAArD,CAAA,GAEL8C,EAFK9C,OAAAoD,EAAA,EAAApD,CAAA,GAGDuD,EAHC,CAIJN,SAAS,EACTC,QAAQ,WAKf,CAACJ,IAEGE,EC9DF,IAAIrB,EAAM6B,IAAM5B,gBAEZ6B,EAAgB,SAAA3B,GAAyC,IAAtCC,EAAsCD,EAAtCC,SAAU2B,EAA4B5B,EAA5B4B,aAAcC,EAAc7B,EAAd6B,QAAcC,EAC1CJ,IAAMK,WAAWF,EAASD,GADgBI,EAAA9D,OAAAmC,EAAA,EAAAnC,CAAA4D,EAAA,GAC7DxB,EAD6D0B,EAAA,GACtDC,EADsDD,EAAA,GAGlE,OAAOxB,EAAAnC,EAAAoC,cAACyB,EAAIxB,SAAL,CAAcC,MAAO,CAAEL,QAAO2B,aAAahC,IAG7C,SAASkC,EAASC,EAAUC,GAAa,IAAAC,EACpBZ,IAAMX,WAAWlB,GAArCS,EADwCgC,EACxChC,MAAO2B,EADiCK,EACjCL,SAEb,OAAO/D,OAAAoD,EAAA,EAAApD,CAAA,GACDkE,EAAWA,EAAS9B,GAASA,EAC7B+B,EAAcA,EAAYJ,GAAY,uBCb/BM,QAAA,CAAAC,KAAA,UAAAC,OAAA,yOCFJC,EAAY,YACZC,EAAe,eACfC,EAAe,eACfC,EAAmB,sBCDnBC,EAAM5E,OAAA6E,EAAA,EAAA7E,CAAA,UAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,SAAAC,OAAA,kCAKNQ,EAAM/E,OAAA6E,EAAA,EAAA7E,CAAA,OAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,UAAAC,OAAA,4DAMNS,EAAiBhF,OAAA6E,EAAA,EAAA7E,CAAO+E,EAAP,CAAAD,OAAA,aAAA9E,CAAH,CAAAsE,KAAA,SAAAC,OAAA,2BAIdU,EAAUjF,OAAA6E,EAAA,EAAA7E,CAAOgF,EAAP,CAAAF,OAAA,aAAA9E,CAAH,CAAAsE,KAAA,UAAAC,OAAA,mDCjBPW,EAAc,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QCQnFpB,EAAW,SAAA9B,GAAK,MAAK,CAAEmD,KAAMnD,EAAMmD,OACnCpB,EAAc,SAAAJ,GAAQ,MAAK,CAC7ByB,YAD6B,SACjBC,GACV1B,EAAS,CAAE2B,KAAMC,EAAgBF,aAItB,SAASG,IAAO,IAAAC,EACD5B,EAASC,EAAUC,GAAzCoB,EADuBM,EACvBN,KAAMC,EADiBK,EACjBL,YAEZ,OACElD,EAAAnC,EAAAoC,cAAC0C,EAAD,KACE3C,EAAAnC,EAAAoC,cAAA,kBACCgD,EAAK9F,OACJ6C,EAAAnC,EAAAoC,cAACuD,EAAD,KACExD,EAAAnC,EAAAoC,cAAA,aACED,EAAAnC,EAAAoC,cAAA,UACED,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,QAAd,QACAzD,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,YAAd,YACAzD,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,SAAd,SACAzD,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,UAAd,YAGJzD,EAAAnC,EAAAoC,cAAA,aACGgD,EAAKS,IAAI,SAAAC,GAAI,OACZ3D,EAAAnC,EAAAoC,cAAA,MAAIO,IAAKmD,EAAKC,IACZ5D,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,QAAQE,EAAK3B,MAC3BhC,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,YAAYE,EAAKE,SAASC,KAAK,OAC7C9D,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,SAASb,EAAYmB,OAAOJ,EAAKK,aAC/ChE,EAAAnC,EAAAoC,cAAA,MAAIwD,UAAU,SAASQ,KAAK,SAASC,SAAS,IAAIC,QAAS,kBAAMjB,EAAYS,KAA7E,aAQR3D,EAAAnC,EAAAoC,cAACmE,EAAD,0BAEFpE,EAAAnC,EAAAoC,cAACoE,EAAD,KACErE,EAAAnC,EAAAoC,cAAA,kBADF,KACiB2C,EAAYmB,OAAOd,EAAKqB,OAAO,SAACC,EAAOZ,GAAR,OAAiBY,EAAQZ,EAAKK,YAAY,KAE1FhE,EAAAnC,EAAAoC,cAACuE,EAAD,CAAQC,GAAG,eAAX,cAKN,IAAIjB,EAAK9F,OAAA6E,EAAA,EAAA7E,CAAA,SAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,UAAAC,OAAA,6HAkBLmC,EAAS1G,OAAA6E,EAAA,EAAA7E,CAAA,OAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,SAAAC,OAAA,kCAKToC,EAAK3G,OAAA6E,EAAA,EAAA7E,CAAA,OAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,UAAAC,OAAA,kBAILuC,EAAS9G,OAAA6E,EAAA,EAAA7E,CAAOgH,IAAP,CAAAlC,OAAA,aAAA9E,CAAH,CAAAsE,KAAA,SAAAC,OAAA,uRCzEV,IAAIhF,EAAQD,EAAH2H,KAUL9C,EAAc,SAAAJ,GAAQ,MAAK,CAC7BmD,WAD6B,SAClBC,GACT,IAAIjB,EAAKkB,KAAKC,SACXC,SAAS,IACTC,OAAO,GACN9B,EAAKzF,OAAAoD,EAAA,EAAApD,CAAA,GAAQmH,EAAR,CAAcjB,OAEvBnC,EAAS,CAAE2B,KAAMC,EAAoB6B,YAAa/B,IAClDgC,YAAS,uBAIE,SAASC,IAAa,IAC7BR,EAAejD,EAAS,KAAME,GAA9B+C,WAD6BS,EAEZjF,EAASnD,GAA1BqI,EAF6BD,EAE7BC,KAAM1E,EAFuByE,EAEvBzE,OAFuBlB,EAGNC,mBAAS,IAHHC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAgC,EAAA,GAG9BwF,EAH8BtF,EAAA,GAGjB2F,EAHiB3F,EAAA,GAWnC,OACEI,EAAAnC,EAAAoC,cAAC0C,EAAD,KACE3C,EAAAnC,EAAAoC,cAAA,qCACCW,EACCZ,EAAAnC,EAAAoC,cAACyC,EAAD,CAAgB8C,GAAG,OAAOC,SAVnB,SAAAC,GACXA,EAAEC,iBAEFf,EAAWM,KAQLlF,EAAAnC,EAAAoC,cAACwC,EAAD,KACG6C,EAAKM,WAAWlC,IAAI,SAAAmB,GAAI,OACvB7E,EAAAnC,EAAAoC,cAAC4F,EAAD,CAAMrF,IAAKqE,EAAK7C,MACdhC,EAAAnC,EAAAoC,cAAA,SACEmD,KAAK,QACLjD,MAAO0E,EAAK7C,KACZ8D,QAASZ,EAAYlD,OAAS6C,EAAK7C,KACnC+D,SAAU,kBAAMR,EAAQV,MAE1B7E,EAAAnC,EAAAoC,cAACyC,EAAD,KACE1C,EAAAnC,EAAAoC,cAAA,UAAK4E,EAAK7C,KAAKgE,eACfhG,EAAAnC,EAAAoC,cAAA,OAAKwD,UAAU,SAASb,EAAYmB,OAAOc,EAAKoB,iBAKxDjG,EAAAnC,EAAAoC,cAACqC,EAAD,CAAQ4D,UAAWhB,EAAYlD,MAA/B,WAGF,oBAMR,IAAI6D,EAAInI,OAAA6E,EAAA,EAAA7E,CAAA,SAAA8E,OAAA,aAAA9E,CAAA,CAAAsE,KAAA,SAAAC,OAAA,2dChER,IAAIhF,EAAQD,EAAHmJ,KAcLvE,EAAW,SAAA9B,GAAK,MAAK,CAAEoF,YAAapF,EAAMoF,cAC1CrD,EAAc,SAAAJ,GAAQ,MAAK,CAC7B2E,SAD6B,SACpBjD,GACP1B,EAAS,CAAE2B,KAAMC,EAAaF,UAC9BgC,YAAS,QAIE,SAASkB,IAAiB,IAAA9C,EACP5B,EAASC,EAAUC,GAA7CqD,EADiC3B,EACjC2B,YAAakB,EADoB7C,EACpB6C,SADoBf,EAEhBjF,EAASnD,EAAO,CAAE+E,KAAMkD,EAAYlD,KAAKgE,gBAA1DV,EAFiCD,EAEjCC,KAAM1E,EAF2ByE,EAE3BzE,OAF2BlB,EAGTC,mBAAS2G,EAAkB1F,EAAS0E,EAAKnC,MAAMU,SAAW,KAHjDjE,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAgC,EAAA,GAGlCmE,EAHkCjE,EAAA,GAGxB2G,EAHwB3G,EAAA,GAInC4G,EAAc3C,EAAS4C,OAAO,SAAApD,GAAC,OAAIA,EAAEyC,UAAS3I,OAC9CuJ,EAAgB7C,EAASS,OAAO,SAACC,EAAOlB,GAAR,OAAckB,GAASlB,EAAEyC,QAAUzC,EAAEsD,QAAQC,MAAQ,IAAI,GACzF5C,EAAakB,EAAYe,UAAYS,EACrCG,EAAuB3B,EAAY4B,cAAgBN,EAEvD3F,oBAAU,WACJD,GACF2F,EAAYD,EAAkBhB,EAAKnC,MAAMU,YAE1C,CAACjD,IAkBJ,OACEZ,EAAAnC,EAAAoC,cAAC0C,EAAD,KACE3C,EAAAnC,EAAAoC,cAAA,mCACAD,EAAAnC,EAAAoC,cAAC8G,EAAD,CAAMvB,GAAG,OAAOC,SAbP,SAAAC,GACXA,EAAEC,iBAEFS,EAAS1I,OAAAoD,EAAA,EAAApD,CAAA,GACJwH,EADG,CAENlB,aACAH,SAAUA,EAAS4C,OAAO,SAAApD,GAAC,OAAIA,EAAEyC,UAASpC,IAAI,SAAAL,GAAC,OAAIA,EAAEsD,QAAQ3E,YAQ1DpB,EACGiD,EAASH,IAAI,SAAAL,GAAC,OACZrD,EAAAnC,EAAAoC,cAAC+G,EAAD,CAASxG,IAAK6C,EAAEsD,QAAQ3E,MACtBhC,EAAAnC,EAAAoC,cAAA,SACEmD,KAAK,WACL0C,QAASzC,EAAEyC,QACXI,UAAW7C,EAAEyC,SAAWe,EACxBd,SAAU,kBA3BNkB,EA2B0B5D,EAAEsD,QAAQ3E,UA1BtDuE,EACE1C,EAASH,IAAI,SAAAL,GAAC,OAAKA,EAAEsD,QAAQ3E,OAASiF,EAAnBvJ,OAAAoD,EAAA,EAAApD,CAAA,GAAsC2F,EAAtC,CAAyCyC,SAAUzC,EAAEyC,UAAYzC,KAFpE,IAAA4D,KA6BNjH,EAAAnC,EAAAoC,cAAA,QAAMwD,UAAU,QAAQJ,EAAEsD,QAAQ3E,MAClChC,EAAAnC,EAAAoC,cAAA,QAAMwD,UAAU,SAASb,EAAYmB,OAAOV,EAAEsD,QAAQC,WAG1D,sBACJ5G,EAAAnC,EAAAoC,cAACiH,GAAD,KACElH,EAAAnC,EAAAoC,cAAA,qBACAD,EAAAnC,EAAAoC,cAAA,YACED,EAAAnC,EAAAoC,cAAA,kBADF,IACgBiF,EAAYlD,MAE5BhC,EAAAnC,EAAAoC,cAAA,QAAM8C,MAAO,CAAEoE,MAAON,EAAuB,MAAQ,KACnD7G,EAAAnC,EAAAoC,cAAA,4BADF,IAC0BiF,EAAY4B,aAAe,aAErD9G,EAAAnC,EAAAoC,cAAA,YACED,EAAAnC,EAAAoC,cAAA,wBADF,IACsB2C,EAAYmB,OAAOmB,EAAYe,YAErDjG,EAAAnC,EAAAoC,cAAA,YACED,EAAAnC,EAAAoC,cAAA,yBADF,IACuB2C,EAAYmB,OAAOC,KAG5ChE,EAAAnC,EAAAoC,cAACqC,EAAD,oBAMR,IAAIgE,EAAoB,SAAAzC,GAAQ,OAAIA,EAASH,IAAI,SAAAL,GAAC,OAAA3F,OAAAoD,EAAA,EAAApD,CAAA,CAAOoI,QAASzC,EAAE+D,iBAAoB/D,MAEpF0D,EAAOrJ,OAAA6E,EAAA,EAAA7E,CAAOgF,EAAP,CAAAF,OAAA,YAAA9E,CAAH,CAAAsE,KAAA,UAAAC,OAAA,4BAIJ+E,EAAOtJ,OAAA6E,EAAA,EAAA7E,CAAA,SAAA8E,OAAA,YAAA9E,CAAA,CAAAsE,KAAA,SAAAC,OAAA,wLAuBPiF,GAAUxJ,OAAA6E,EAAA,EAAA7E,CAAOgF,EAAP,CAAAF,OAAA,YAAA9E,CAAH,CAAAsE,KAAA,SAAAC,OAAA,8CC9GIoF,GAXJ,kBACTrH,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAAyJ,SAAA,KACEtH,EAAAnC,EAAAoC,cAACsH,EAAA,EAAD,CAAQtF,OAAQuF,IAChBxH,EAAAnC,EAAAoC,cAACwH,EAAA,EAAD,KACEzH,EAAAnC,EAAAoC,cAACqD,EAAD,CAAMoE,KAAK,MACX1H,EAAAnC,EAAAoC,cAACmF,EAAD,CAAYsC,KAAK,iBACjB1H,EAAAnC,EAAAoC,cAACoG,EAAD,CAAgBqB,KAAK,wBCTvBC,GAAMC,SAASC,cAAc,qBCFjC,IDIkCC,GCJ9BA,GCDW,WACb,IAAI1G,EAAe,CAAE6B,KAAM,GAAIiC,YAAa,MA6B5C,MAAO,CAAE9D,eAAcC,QA3BvB,WAA+C,IAA9BvB,EAA8B5C,UAAAC,OAAA,QAAAkD,IAAAnD,UAAA,GAAAA,UAAA,GAAtBkE,EAAc2G,EAAQ7K,UAAAC,OAAA,EAAAD,UAAA,QAAAmD,EAC7C,OAAQ0H,EAAO3E,MACb,KAAKC,EACH,OAAO3F,OAAAoD,EAAA,EAAApD,CAAA,GACFoC,EADL,CAEEmD,KAAI,GAAAxC,OAAA/C,OAAAsK,GAAA,EAAAtK,CAAMoC,EAAMmD,MAAZ,CAAkB8E,EAAO5E,UAEjC,KAAKE,EACH,OAAO3F,OAAAoD,EAAA,EAAApD,CAAA,GACFoC,EADL,CAEEmD,KAAMnD,EAAMmD,KAAKS,IAAI,SAAAP,GAAK,OAAKA,EAAMS,KAAOmE,EAAO5E,MAAMS,GAAKmE,EAAO5E,MAAQA,MAEjF,KAAKE,EACH,OAAO3F,OAAAoD,EAAA,EAAApD,CAAA,GACFoC,EADL,CAEEmD,KAAMnD,EAAMmD,KAAKwD,OAAO,SAAAtD,GAAK,OAAIA,EAAMS,KAAOmE,EAAO5E,MAAMS,OAE/D,KAAKP,EACH,OAAO3F,OAAAoD,EAAA,EAAApD,CAAA,GACFoC,EADL,CAEEoF,YAAa6C,EAAO7C,cAExB,QACE,OAAOpF,KDzBHmI,GDIsBH,GCFxBA,GDGRI,IAASC,OACPnI,EAAAnC,EAAAoC,cAACmI,EAAkBN,GACjB9H,EAAAnC,EAAAoC,cAACoI,EAAD,KACErI,EAAAnC,EAAAoC,cAACqI,GAAD,QAGJX","file":"static/js/main.3bc8aaaf.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\n\nexport function graphql(query, ...exps) {\n  if (exps.length) {\n    throw new Error(\"error: graphql`` template literal do not support expressions.\");\n  }\n\n  let string = String.raw(query);\n\n  return {\n    string,\n    async request(variables) {\n      let init = {\n        method: \"POST\",\n        body: JSON.stringify({ query: string, variables }),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      };\n\n      let res = await fetch(\"https://core-graphql.dev.waldo.photos/pizza\", init);\n\n      return res.json();\n    }\n  };\n}\n\nexport let ctx = createContext({});\n\nexport let GraphqlProvider = ({ children }) => {\n  let [state, setState] = useState({});\n\n  return <ctx.Provider value={{ state, setState }}>{children}</ctx.Provider>;\n};\n\nexport function useQuery(query, variables = {}) {\n  let { string, request } = query;\n  let { state, setState } = useContext(ctx);\n  let key = `${string}:${JSON.stringify(variables)}`;\n  let cachedQuery = state[key] || { loading: false, loaded: false };\n\n  useEffect(() => {\n    if (!cachedQuery.loaded) {\n      setState({\n        ...state,\n        [key]: {\n          loading: true,\n          loaded: false\n        }\n      });\n\n      request(variables).then(result => {\n        setState({\n          ...state,\n          [key]: {\n            ...result,\n            loading: false,\n            loaded: true\n          }\n        });\n      });\n    }\n  }, [key]);\n\n  return cachedQuery;\n}\n","import React from \"react\";\n\nexport let ctx = React.createContext();\n\nexport let StoreProvider = ({ children, initialState, reducer }) => {\n  let [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return <ctx.Provider value={{ state, dispatch }}>{children}</ctx.Provider>;\n};\n\nexport function useStore(mapState, mapDispatch) {\n  let { state, dispatch } = React.useContext(ctx);\n\n  return {\n    ...(mapState ? mapState(state) : state),\n    ...(mapDispatch ? mapDispatch(dispatch) : {})\n  };\n}\n","import css from \"@emotion/css/macro\";\n\nexport default css`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n    font: 16px/1.5 -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial,\n      sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  }\n`;\n","export let ADD_PIZZA = \"ADD_PIZZA\";\nexport let UPDATE_PIZZA = \"UPDATE_PIZZA\";\nexport let REMOVE_PIZZA = \"REMOVE_PIZZA\";\nexport let SET_CURRENT_SIZE = \"SET_CURRENT_TOPPING\";\n","import styled from \"@emotion/styled/macro\";\n\nexport let Button = styled.button`\n  appearance: none;\n  font: inherit;\n`;\n\nexport let Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport let VerticalCenter = styled(Center)`\n  flex-direction: column;\n`;\n\nexport let Wrapper = styled(VerticalCenter)`\n  min-height: 100vh;\n\n  h1 {\n    text-transform: uppercase;\n  }\n`;\n","export let currencyFmt = new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" });\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Link } from \"@reach/router\";\nimport * as t from \"../constants\";\nimport { useStore } from \"../lib\";\nimport { Wrapper } from \"../ui-kit\";\nimport { currencyFmt } from \"../util\";\n\nlet mapState = state => ({ cart: state.cart });\nlet mapDispatch = dispatch => ({\n  removePizza(pizza) {\n    dispatch({ type: t.REMOVE_PIZZA, pizza });\n  }\n});\n\nexport default function Cart() {\n  let { cart, removePizza } = useStore(mapState, mapDispatch);\n\n  return (\n    <Wrapper>\n      <h1>Cart</h1>\n      {cart.length ? (\n        <Table>\n          <thead>\n            <tr>\n              <th className=\"name\">name</th>\n              <th className=\"toppings\">toppings</th>\n              <th className=\"price\">price</th>\n              <th className=\"remove\">remove</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart.map(item => (\n              <tr key={item.id}>\n                <td className=\"name\">{item.name}</td>\n                <td className=\"toppings\">{item.toppings.join(\", \")}</td>\n                <td className=\"price\">{currencyFmt.format(item.totalPrice)}</td>\n                <td className=\"remove\" role=\"button\" tabIndex=\"0\" onClick={() => removePizza(item)}>\n                  ×\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <EmptyCart>no pizzas yet : (</EmptyCart>\n      )}\n      <Total>\n        <b>Total</b>: {currencyFmt.format(cart.reduce((total, item) => total + item.totalPrice, 0))}\n      </Total>\n      <AddBtn to=\"choose-size\">add pizza</AddBtn>\n    </Wrapper>\n  );\n}\n\nlet Table = styled.table`\n  th,\n  td {\n    text-align: left;\n    padding: 0.5em 1em;\n  }\n\n  .price {\n    text-align: right;\n  }\n\n  td.remove {\n    text-align: center;\n    color: red;\n    cursor: pointer;\n  }\n`;\n\nlet EmptyCart = styled.div`\n  margin: 2em 0;\n  font-weight: 700;\n`;\n\nlet Total = styled.div`\n  margin: 2em 0;\n`;\n\nlet AddBtn = styled(Link)`\n  text-transform: uppercase;\n  color: #000;\n  text-decoration: none;\n  border-radius: 2px;\n  padding: 0.5em;\n  border: 1px solid;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport { navigate } from \"@reach/router\";\nimport * as t from \"../constants\";\nimport { graphql, useQuery } from \"../lib/graphql\";\nimport { Button, Center, VerticalCenter, Wrapper } from \"../ui-kit\";\nimport { useStore } from \"../lib\";\nimport { currencyFmt } from \"../util\";\n\nlet query = graphql`\n  query {\n    pizzaSizes {\n      name\n      maxToppings\n      basePrice\n    }\n  }\n`;\n\nlet mapDispatch = dispatch => ({\n  chooseSize(size) {\n    let id = Math.random()\n      .toString(36)\n      .substr(2);\n    let pizza = { ...size, id };\n\n    dispatch({ type: t.SET_CURRENT_SIZE, currentSize: pizza });\n    navigate(\"/choose-toppings\");\n  }\n});\n\nexport default function ChooseSize() {\n  let { chooseSize } = useStore(null, mapDispatch);\n  let { data, loaded } = useQuery(query);\n  let [currentSize, setSize] = useState({});\n\n  let submit = e => {\n    e.preventDefault();\n\n    chooseSize(currentSize);\n  };\n\n  return (\n    <Wrapper>\n      <h1>choose your pizza size!</h1>\n      {loaded ? (\n        <VerticalCenter as=\"form\" onSubmit={submit}>\n          <Center>\n            {data.pizzaSizes.map(size => (\n              <Size key={size.name}>\n                <input\n                  type=\"radio\"\n                  value={size.name}\n                  checked={currentSize.name === size.name}\n                  onChange={() => setSize(size)}\n                />\n                <VerticalCenter>\n                  <h2>{size.name.toUpperCase()}</h2>\n                  <div className=\"price\">{currencyFmt.format(size.basePrice)}</div>\n                </VerticalCenter>\n              </Size>\n            ))}\n          </Center>\n          <Button disabled={!currentSize.name}>submit</Button>\n        </VerticalCenter>\n      ) : (\n        \"loading sizes...\"\n      )}\n    </Wrapper>\n  );\n}\n\nlet Size = styled.label`\n  display: block;\n  position: relative;\n  margin: 2em 1em;\n  border: 1px solid;\n  padding: 0.5em 1em;\n\n  input {\n    appearance: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  h2 {\n    font-size: 1em;\n  }\n\n  .price {\n    font-size: 2em;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport styled from \"@emotion/styled/macro\";\nimport * as t from \"../constants\";\nimport { useStore, graphql, useQuery } from \"../lib\";\nimport { Wrapper, VerticalCenter, Button } from \"../ui-kit\";\nimport { currencyFmt } from \"../util\";\n\nlet query = graphql`\n  query($name: PizzaSizes) {\n    pizza: pizzaSizeByName(name: $name) {\n      toppings {\n        defaultSelected\n        topping {\n          name\n          price\n        }\n      }\n    }\n  }\n`;\n\nlet mapState = state => ({ currentSize: state.currentSize });\nlet mapDispatch = dispatch => ({\n  addPizza(pizza) {\n    dispatch({ type: t.ADD_PIZZA, pizza });\n    navigate(\"/\");\n  }\n});\n\nexport default function ChooseToppings() {\n  let { currentSize, addPizza } = useStore(mapState, mapDispatch);\n  let { data, loaded } = useQuery(query, { name: currentSize.name.toUpperCase() });\n  let [toppings, setToppings] = useState(normalizeToppings(loaded ? data.pizza.toppings : []));\n  let toppingsQnt = toppings.filter(t => t.checked).length;\n  let toppingsPrice = toppings.reduce((total, t) => total + (t.checked ? t.topping.price : 0), 0);\n  let totalPrice = currentSize.basePrice + toppingsPrice;\n  let toppingsLimitReached = currentSize.maxToppings === toppingsQnt;\n\n  useEffect(() => {\n    if (loaded) {\n      setToppings(normalizeToppings(data.pizza.toppings));\n    }\n  }, [loaded]);\n\n  let toggleTopping = toppingName => {\n    setToppings(\n      toppings.map(t => (t.topping.name === toppingName ? { ...t, checked: !t.checked } : t))\n    );\n  };\n\n  let submit = e => {\n    e.preventDefault();\n\n    addPizza({\n      ...currentSize,\n      totalPrice,\n      toppings: toppings.filter(t => t.checked).map(t => t.topping.name)\n    });\n  };\n\n  return (\n    <Wrapper>\n      <h1>choose your toppings!</h1>\n      <Form as=\"form\" onSubmit={submit}>\n        {loaded\n          ? toppings.map(t => (\n              <Topping key={t.topping.name}>\n                <input\n                  type=\"checkbox\"\n                  checked={t.checked}\n                  disabled={!t.checked && toppingsLimitReached}\n                  onChange={() => toggleTopping(t.topping.name)}\n                />\n                <span className=\"name\">{t.topping.name}</span>\n                <span className=\"price\">{currencyFmt.format(t.topping.price)}</span>\n              </Topping>\n            ))\n          : \"loading toppings...\"}\n        <Summary>\n          <h2>Sumary:</h2>\n          <span>\n            <b>size:</b> {currentSize.name}\n          </span>\n          <span style={{ color: toppingsLimitReached ? \"red\" : \"\" }}>\n            <b>toppings limit:</b> {currentSize.maxToppings || \"unlimited\"}\n          </span>\n          <span>\n            <b>base price:</b> {currencyFmt.format(currentSize.basePrice)}\n          </span>\n          <span>\n            <b>total price:</b> {currencyFmt.format(totalPrice)}\n          </span>\n        </Summary>\n        <Button>add pizza</Button>\n      </Form>\n    </Wrapper>\n  );\n}\n\nlet normalizeToppings = toppings => toppings.map(t => ({ checked: t.defaultSelected, ...t }));\n\nlet Form = styled(VerticalCenter)`\n  align-items: flex-start;\n`;\n\nlet Topping = styled.label`\n  padding: 0.5em 0;\n  border-bottom: 1px solid;\n  width: 100%;\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  input:disabled ~ * {\n    opacity: 0.5;\n  }\n\n  .name {\n    margin-left: 0.5em;\n  }\n\n  .price {\n    margin-left: 2em;\n    float: right;\n  }\n`;\n\nlet Summary = styled(VerticalCenter)`\n  align-items: flex-start;\n  margin-bottom: 2em;\n`;\n","import React from \"react\";\nimport { Global } from \"@emotion/core\";\nimport { Router } from \"@reach/router\";\nimport globalStyles from \"./global-styles\";\nimport Cart from \"./routes/Cart\";\nimport ChooseSize from \"./routes/ChooseSize\";\nimport ChooseToppings from \"./routes/ChooseToppings\";\n\nlet Root = () => (\n  <>\n    <Global styles={globalStyles} />\n    <Router>\n      <Cart path=\"/\" />\n      <ChooseSize path=\"/choose-size\" />\n      <ChooseToppings path=\"/choose-toppings\" />\n    </Router>\n  </>\n);\n\nexport default Root;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { GraphqlProvider, StoreProvider } from \"./lib\";\nimport Root from \"./Root\";\n\nlet mnt = document.querySelector(\"#mnt\");\n\nexport default function bootstrap(store) {\n  ReactDom.render(\n    <StoreProvider {...store}>\n      <GraphqlProvider>\n        <Root />\n      </GraphqlProvider>\n    </StoreProvider>,\n    mnt\n  );\n}\n","import bootstrap from \"./bootstrap\";\nimport createStore from \"./create-store\";\n\nlet store = createStore();\n\nbootstrap(store);\n\nif (module.hot) {\n  module.hot.accept(() => {\n    require(\"./bootstrap\").default(store);\n  });\n}\n","import * as t from \"./constants\";\n\nexport default function createStore() {\n  let initialState = { cart: [], currentSize: null };\n\n  function reducer(state = initialState, action) {\n    switch (action.type) {\n      case t.ADD_PIZZA:\n        return {\n          ...state,\n          cart: [...state.cart, action.pizza]\n        };\n      case t.UPDATE_PIZZA:\n        return {\n          ...state,\n          cart: state.cart.map(pizza => (pizza.id === action.pizza.id ? action.pizza : pizza))\n        };\n      case t.REMOVE_PIZZA:\n        return {\n          ...state,\n          cart: state.cart.filter(pizza => pizza.id !== action.pizza.id)\n        };\n      case t.SET_CURRENT_SIZE:\n        return {\n          ...state,\n          currentSize: action.currentSize\n        };\n      default:\n        return state;\n    }\n  }\n\n  return { initialState, reducer };\n}\n"],"sourceRoot":""}